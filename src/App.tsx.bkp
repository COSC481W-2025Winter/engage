function Home() {
    return (
    
    <div className="app">
      {TopBar()}
      <div className="app-container">
      <div className="video-container">
      <div className="video-player">
        <ReactPlayer
          id="video"
          url={currentVideo || ""}
          playing={true}
          muted={true}
          controls={true}
          loop={true}
          playsinline={true}
          width="80vw"
          height="60vh"
          onStart={handleVideoStart}
        />
      </div>
      <div className="video-stats">
        <button onClick={handleLike} style={{ color: liked ? "red" : "black" }}>
          <i className="fa-solid fa-heart"></i> {likeCount} Likes
        </button>
        <span className="view-count">
          <i className="fa-solid fa-eye"></i> {viewCount} Views
        </span>
      </div>

      </div>

      {/* 1. Video control buttons */}
      <div className="controls">
        {/* Download button */}
        <a className="control-button" href={currentVideo} download>
          <i className="fa-solid fa-download"></i> DOWNLOAD
        </a>

        {/* 2. Navigate to User page */}
        {/* <button className="control-button user-button" onClick={() => navigate('/user')}>
          ENGAGER <i className="fa-solid fa-user"></i>
        </button> */}

        {/*3. Next video button */}
        <button className="control-button" onClick={handleNext}>
          NEXT <i className="fa-solid fa-arrow-right"></i>
        </button>
      </div>

      {/*4. Upload button */}
      <div className="upload-section">
        <button className="upload-button" onClick={() => navigate("/upload")}>
          ENGAGE <i className="fa-solid fa-upload"></i>
        </button>
      </div>

        <div className="control-button" onClick={getVideoInfo}>
          <i className="fas fa-info-circle"></i> VIDEO INFO
        </div>
      <div className="login-button-section">
        <button
          className="control-button"
          onClick={loggedIn ? () => navigate("/user") : handleBackToLogin}
        >
          {loggedIn ? (
            <>
              <i className="fa-solid fa-user"></i> {username}
            </>
          ) : (
            <>
              <i className="fa solid fa-right-to-bracket"></i> Log In
            </>
          )}
        </button>
        {/* <button className="control-button" onClick={async () => {
          const userId = await getLoggedInUserId();
          if (userId !== null) {
            const username = await getUsername(userId);
            alert(username);
          } else {
            alert("User is not logged in.");
          }
        }}>
          Engager <i className="fa-solid fa-user"></i>
        </button>  */}
        {}
        {/* <button className="control-button" onClick={handleBackToLogin}>
          
          Log In <i className="fa solid fa-right-to-bracket"></i>
        </button>
        <button className="control-button" onClick={async () => {
          const userId = await getLoggedInUserId();
          if (userId !== null) {
            const username = await getUsername(userId);
            alert(username);
          } else {
            alert("User is not logged in.");
          }
        }}>
          Engager <i className="fa-solid fa-user"></i>
        </button>  */}
      </div>
      </div>
    </div>
  );
}